var form = {



    'defaults': {
        'button': '.formAwesome-submit',
        'form': '.formAwesome',
        'group': '.formAwesome-group',
        'label': '.formAwesome-label',
        'input': '.formAwesome-input',
        'validation': '.formAwesome-validation',
        'delay': 800,
        'messageSuccess': 'Ваше сообщение отправлено!',
        'messageTimeToClose': 4000,

        'error': 'has-error',
    },



    'button': function(options) {

        var parentObj = this;
        $(document).on('click', parentObj.defaults.button, function(){
            var button = $(this),
                form = button.parents(parentObj.defaults.form);
            parentObj.submit(form, options);
            return false;
        });

    },


    'hasError': function(form) {

        return $(form).find(this.defaults.group).hasClass(this.defaults.error) ? true : false;

    },


    'intTelPhone': function(form){

        var newPhone = form.find('.intTelInput-clone');

        if(newPhone.length) {
            newPhone.remove();
        }

        var phone = form.find('input.intTelInput');

        if(!phone.length) { return false; }

        var code = phone.parents('.intl-tel-input').find('.selected-dial-code').html(),
            number = newPhone.length ? newPhone.val() : phone.val();

        if(!code.length) { return false; }

        var result = '(' + code + ')' + number,
            newPhone = $('<input />')
                .val(number)
                .attr('type', 'input')
                .attr('name', 'newInput-name')
                .attr('id', 'newInput-id')
                .attr('number', number)
                .attr('placeholder', phone.attr('placeholder'))
                .addClass(phone.attr('class'))
                .addClass('intTelInput-clone');
        phone
            .val(result)
            .attr('number', phone.val())
            .css({
                'display': 'none'
            })
            .after(newPhone);
    },


    'recaptchaReset': function(container) {

        var recaptha = $(container).find('.g-recaptcha-response');

        if(recaptha.length == 0) { return false; }

        var index = $(recaptha).attr('id').match(/\d+$/);

        index = index == null ? 0 : index[0];

        grecaptcha.reset(index);

    },


    'isParentModal': function(elem) {

        return $(elem).parents('.modalAwesome').length ? true : false;

    },


    'serialize': function(form, options) {

        var parentObj = this;

        parentObj.intTelPhone(form);

        $.get($(form).data('target') , $(form).serialize() , function(json)
        {

            if(json.status == 'success')
            {
                //console.log(json.message);
                //console.log('form was submitted');
                if(parentObj.isParentModal(form)) {
                    modalAwesome.close(modalAwesome.getModalActiveIdFromChild(form));
                    setTimeout(function(){
                        modal.notification({
                            'message': options.messageSuccess,
                            'timeToClose': options.messageTimeToClose
                        });
                    },400);
                } else {
                    modal.notification({
                        'message': options.messageSuccess,
                        'timeToClose': options.messageTimeToClose
                    });
                }


                $(form)
                    .find('input').val('');
                $(form)
                    .find('textarea').val('');


                if(json.cookies)
                {
                    $.each(json.cookies , function(i , cookie)
                    {
                        document.cookie = i+"="+cookie;
                    })
                }

                if (json.callback) {
                    window[json.callback]();
                }

                loaderAwesome.destroy({
                    'container': form
                });

            }
            else
            {
                parentObj.recaptchaReset(form);
                $.each(json , function(index , item)
                {
                    $(form)
                        .find(".field-"+index)
                        .addClass(parentObj.defaults.error)
                        .find(parentObj.defaults.validation)
                        .html(item);
                });
                loaderAwesome.destroy({
                    'container': form
                });
            }

        });

    },


    'submit': function(form, options) {

        var parentObj = this;

        loaderAwesome.init({
            'container': form
        });

        if(parentObj.hasError(form)) {
            $(form)
                .find(parentObj.defaults.group)
                .removeClass(parentObj.defaults.error);
            setTimeout(function(){
                $(form)
                    .find(parentObj.defaults.validation)
                    .html('');
                parentObj.serialize(form, options);
            },parentObj.defaults.delay);

        } else {
            parentObj.serialize(form);
        }






    },



    'init': function(options) {

        var parentObj = this,
            options = siteOptions.setOptions({
                defaults: parentObj.defaults,
                source: isExist(options) ? options : {}
            });
        this.button(options);

    },



};
