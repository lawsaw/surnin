var tabAwesome = {


    'default': {
        'container'             : '.tabAwesome',

        'event'                 : 'click',

        'menuItemContainer'     : 'tabAwesome-menu',
        'menuItem'              : 'tabAwesome-menu-item',
        'menuItemActive'        : 'tabAwesome-menu-item--active',
        'menuItemDisable'       : 'tabAwesome-menu-item--disable',
        'menuItemOpening'       : 'tabAwesome-menu-item--opening',
        'menuItemClosing'       : 'tabAwesome-menu-item--closing',
        'menuSpeedOpening'      : 0,
        'menuSpeedClosing'      : 0,
        'menuPlayDelay'         : 0,
        'menuId'                : 'tabAwesome-menu',


        'contentItemContainer'  : 'tabAwesome-content',
        'contentItem'           : 'tabAwesome-content-item',
        'contentItemActive'     : 'tabAwesome-content-item--active',
        'contentItemDisable'    : 'tabAwesome-content-item--disable',
        'contentItemOpening'    : 'tabAwesome-content-item--opening',
        'contentItemClosing'    : 'tabAwesome-content-item--closing',
        'contentSpeedOpening'   : 1000,
        'contentSpeedClosing'   : 500,
        'contentId'             : 'tabAwesome-content',


        'sliderKey'            : false,
        'sliderCallback'       : function(){},




        'sliderDelay'            : 0,

        'buttonNext'             : 'tabAwesome-button-next',
        'buttonPrev'             : 'tabAwesome-button-prev',

        'buttonNextKey'          : false,
        'buttonPrevKey'          : false,

        'buttonNextCallback'     : function(){},
        'buttonPrevCallback'     : function(){},



        'dots'     : false, // must be different per tabAwesome -> {'container': 'tabAwesome-dots', 'imitate': 'another-slider'}


        'data'  : 0,
        'dates' : [],
    },


    'init': function(options) {

        var parentObj = this;

        options = siteOptions.setOptions({
            defaults: this.default,
            source: isExist(options) ? options : {}
        });

        $(document).find(options.container).each(function(){
            var data = {},
                container = $(this);
            data['container'] = container;
            data['menu'] = {
                'itemContainer': $(container).closestChild('.' + options.menuItemContainer),
                'item': $(container).closestChild('.' + options.menuItem),
                'speedOpening': options.menuSpeedOpening,
                'speedClosing': options.menuSpeedClosing,
                'timerOpening': 0,
                'timerClosing': 0,
            };
            data['content'] = {
                'itemContainer': $(container).closestChild('.' + options.contentItemContainer),
                'item': $(container).closestChild('.' + options.contentItem),
                'speedOpening': options.contentSpeedOpening,
                'speedClosing': options.contentSpeedClosing,
                'timerOpening': 0,
                'timerClosing': 0,
            };
            data['button'] = {
                'next': $(container).closestChild('.' + options.buttonNext),
                'prev': $(container).closestChild('.' + options.buttonPrev),
            };

            if(options.dots) {
                data['dots'] = {
                    'container': $(document).find('.' + options.dots.container),
                    'items': $(document).find('.' + options.dots.container).closestChild('.' + options.dots.container + '-item'),
                    'imitate': options.dots.imitate ? $(document).find('.' + options.dots.imitate) : false,
                };
            }


            var contentCurrent = data.content.item.filter('.' + options.contentItemActive);

            data.content.itemContainer.css({
                'height' : contentCurrent.innerHeight() + 'px'
            });

            options.data = data;
            options.dates.push(data);

        });

        parentObj.listener(options);

    },


    'isPlaying': function(options) {
        return $(document).find(options.data.container).closestChild('.' + options.menuItemOpening).length > 0
        || $(document).find(options.data.container).closestChild('.' + options.contentItemOpening).length > 0
        || $(document).find(options.data.container).closestChild('.' + options.menuItemClosing).length > 0
        || $(document).find(options.data.container).closestChild('.' + options.contentItemClosing).length > 0 ? true : false;
    },


    'listener': function(options) {
        var parentObj = this;
        $(options.data.menu.item).on(options.event, function() {
            if(options.sliderKey == true) {
                return false;
            }
            var elem = $(this);
            if(elem.hasClass(options.menuItemActive)) {
                return false;
            }
            if(parentObj.isPlaying(options)) {
                parentObj.reset(options);
            }
            parentObj.activate(elem, options);

            options.sliderKey = true;
            options.sliderCallback({
                'elem': elem
            });
            setTimeout(function(){
                options.sliderKey = false;
            }, options.sliderDelay );

        });

        if(options.dots) {
            $(options.data.dots.items).each(function(){
                var item = $(this);
                $(item).on(options.event, function() {

                    var order = item.index();
                    $(options.data.menu.item.eq(order)).click();

                    // if(options.data.dots.imitate) {
                    //     var imitateSlider = {
                    //         'container': $(document).find('.' + options.data.dots.imitate)
                    //     };
                    //     imitateSlider['menu'] = $(imitateSlider.container).find()
                    // }

                    //console.log(order);
                    //console.log(options.data.menu.item);


                });
            });
        }



        $(options.data.button.next).on(options.event, function() {
            if(options.buttonNextKey == true) {
                return false;
            }
            var elemActive = $(options.data.menu.itemContainer).closestChild('.' + options.menuItemActive);
            var elemFirst = $(options.data.menu.itemContainer).closestChild('.' + options.menuItem + ':first');
            if(parentObj.isPlaying(options)) {
                parentObj.reset(options);
            }
            if($(elemActive).next().length) {
                parentObj.activate($(elemActive).next(), options);
                console.log('there is one more next');
            } else {
                parentObj.activate($(elemFirst), options);
                console.log('there is no more next');
            }


            options.buttonNextKey = true;
            options.buttonNextCallback();
            setTimeout(function(){
                options.buttonNextKey = false;
            }, options.sliderDelay );
        });

        $(options.data.button.prev).on(options.event, function() {
            if(options.buttonPrevKey == true) {
                return false;
            }
            var elemActive = $(options.data.menu.itemContainer).closestChild('.' + options.menuItemActive);
            var elemLast = $(options.data.menu.itemContainer).closestChild('.' + options.menuItem + ':last');
            if(parentObj.isPlaying(options)) {
                parentObj.reset(options);
            }
            if($(elemActive).prev().length) {
                parentObj.activate($(elemActive).prev(), options);
                console.log('there is one more prev');
            } else {
                parentObj.activate($(elemLast), options);
                console.log('there is no more prev');
            }

            options.buttonPrevKey = true;
            options.buttonPrevCallback();
            setTimeout(function(){
                options.buttonPrevKey = false;
            }, options.sliderDelay );

        });


        $(window).on('resize', function() {
            var elemActive = $(options.data.menu.itemContainer).closestChild('.' + options.menuItemActive);
            parentObj.activate(elemActive, options, 'stopPlaying');
        });

    },



    'activate': function(elem, options) {


        var parentObj = this,
            id = elem.attr('data-' + options.menuId),
            contentTarget = options.data.content.item.filter('[data-' + options.contentId + '=' + id + ']'),
            contentCurrent = contentTarget.siblings('.' + options.contentItemActive),
            contentContainer = contentTarget.parent('.' + options.contentItemContainer);

        contentContainer.css({
            'transition-duration' : options.contentSpeedOpening / 1000 + 's',
            'height' : contentTarget.innerHeight() + 'px'
        });

        if(arguments[2] == 'stopPlaying') {
            return false;
        }

        options['play'] = {
            'menu': {
                'target': $(elem),
                'current': $(elem).siblings('.' + options.menuItemActive),
                'currentCloseSpeed': options.menuSpeedClosing,
                'targetOpenSpeed': options.menuSpeedOpening,
                'classActive': options.menuItemActive,
                'classDisable': options.menuItemDisable,
                'classOpening': options.menuItemOpening,
                'classClosing': options.menuItemClosing,
                'timerCurrent': options.data.menu.timerOpening,
                'timerClosing': options.data.menu.timerClosing,
            },
            'content': {
                'target': $(contentTarget),
                'current': $(contentCurrent),
                'currentCloseSpeed': options.contentSpeedClosing,
                'targetOpenSpeed': options.contentSpeedOpening,
                'classActive': options.contentItemActive,
                'classDisable': options.contentItemDisable,
                'classOpening': options.contentItemOpening,
                'classClosing': options.contentItemClosing,
                'timerCurrent': options.data.content.timerOpening,
                'timerClosing': options.data.content.timerClosing,
            }
        };


        for(var set in options.play) {

            parentObj.animate({
                'target'            : options.play[set].target,
                'current'           : options.play[set].current,
                'currentCloseSpeed' : options.play[set].currentCloseSpeed,
                'targetOpenSpeed'   : options.play[set].targetOpenSpeed,
                'classActive'       : options.play[set].classActive,
                'classDisable'      : options.play[set].classDisable,
                'classOpening'      : options.play[set].classOpening,
                'classClosing'      : options.play[set].classClosing,
                'timerCurrent'      : options.play[set].timerCurrent,
                'timerTarget'       : options.play[set].timerTarget,
                'optionsNative'     : options,
            });
        }



    },



    'animate': function(options) {

        var parentObj = this;

        $(options.current)
            .addClass(options.classClosing)
            .css({
                'transition-duration' : options.currentCloseSpeed / 1000 + 's'
            });

        $(options.target)
            .addClass(options.classOpening)
            .css({
                'transition-duration' : options.targetOpenSpeed / 1000 + 's'
            });

        options.timerCurrent = setInterval(function() {
            if(!$(options.current).hasClass(options.classClosing)) {
                return false;
            }
            $(options.current)
                .addClass(options.classDisable)
                .removeClass(options.classActive)
                .removeClass(options.classClosing)
                .css({
                    'transition-duration' : '0s'
                });
        }, options.currentCloseSpeed);

        setTimeout(function() {
            clearInterval(options.timerCurrent);
        }, options.currentCloseSpeed);

        options.timerTarget = setInterval(function() {
            if(!$(options.target).hasClass(options.classOpening)) {
                return false;
            }
            $(options.target)
                .addClass(options.classActive)
                .removeClass(options.classDisable)
                .removeClass(options.classOpening)
                .css({
                    'transition-duration' : '0s'
                });
        }, options.targetOpenSpeed);

        setTimeout(function() {
            clearInterval(options.timerTarget);
        }, options.targetOpenSpeed);

    },


    'reset': function(options) {

        var menuItemCurrent = options.play.menu.current,
            menuItemTarget = options.play.menu.target,
            contentItemCurrent = options.play.content.current,
            contentItemTarget = options.play.content.target;

        $(menuItemTarget)
            .css({
                'transition-duration' : '0.3s'
            })
            .addClass(options.menuItemDisable)
            .removeClass(options.menuItemActive)
            .removeClass(options.menuItemOpening)
            .removeClass(options.menuItemClosing);

        $(contentItemTarget)
            .css({
                'transition-duration' : '0.3s'
            })
            .addClass(options.contentItemDisable)
            .removeClass(options.contentItemActive)
            .removeClass(options.contentItemOpening)
            .removeClass(options.contentItemClosing);

        $(menuItemCurrent)
            .css({
                'transition-duration' : '0.3s'
            })
            .addClass(options.menuItemActive)
            .removeClass(options.menuItemDisable)
            .removeClass(options.menuItemOpening)
            .removeClass(options.menuItemClosing);

        $(contentItemCurrent)
            .css({
                'transition-duration' : '0.3s'
            })
            .addClass(options.contentItemActive)
            .removeClass(options.contentItemDisable)
            .removeClass(options.contentItemOpening)
            .removeClass(options.contentItemClosing);
    },






};