var collapseAwesome = {

    'default': {
        'container'     : '.collapseAwesome',
        'example'       : '.collapseAwesome-example',
        'target'        : '.collapseAwesome-target',
        'content'       : '.collapseAwesome-target-content',
        'footer'        : '.collapseAwesome-target-footer',
        'button'        : '.collapseAwesome-target-button',
        'label'         : '.collapseAwesome-target-button-text',
        'status'        : 'closed',
        'displayNone'   : 'css-display-none',
        'labelReadMore' : 'Читать далее...',
        'labelReadShort': 'Закрыть',

    },

    'init': function(options) {
        var options = siteOptions.setOptions({
            defaults: this.default,
            source: isExist(options) ? options : {}
        }),
            parentObj = this;

        //console.table(options);

        $(document).find(options.container).each(function(){

            var container = $(this),
                target = $(container).closestChild(options.target),
                example = $(container).closestChild(options.example),
                content = $(container).closestChild(options.content),
                footer = $(container).closestChild(options.footer),
                button = $(container).closestChild(options.button),
                label = $(container).closestChild(options.label);

            var data = {
                'container' : container,
                'target'    : target,
                'example'   : example,
                'content'   : content,
                'footer'    : footer,
                'button'    : button,
                'label'     : label,
            };

            parentObj.setState(data, options);
            parentObj.listenScreenWidth(data, options);

            $(container).on('click', options.button, function(){
                parentObj.toggleStatus(options);
                parentObj.setState(data, options);
                return false;
            });



        });
    },


    'listenScreenWidth': function(data, options) {
        var parentObj = this,
            width = getViewportSize().width;

        function setRightState(width) {
            if(width <= siteOptions.responsive.sizeL) {
                parentObj.setState(data, options, true);
            } else {
                parentObj.setState(data, options);
            }
        };

        setRightState(width);

        $(window).on('adaptive', function(e, state) {
            setRightState(state);
        });
    },


    'toggleStatus': function(options) {

        options.status = options.status == 'opened' ? 'closed' : 'opened';

    },


    'setState': function(data, options, state) {

        if(state) {
            $(data.target).css({
                'height': ''
            });
            $(data.footer).addClass(options.displayNone);
            return false;
        }

        var height = {
            'closed': $(data.example).innerHeight(),
            'opened': $(data.content).innerHeight(),
            'footer': $(data.footer).innerHeight(),
        };

        if(height.opened <= height.closed) {
            this.setState(data, options, true);
            return false;
        } else {
            $(data.footer).removeClass(options.displayNone);
        }

        switch(options.status) {
            case 'opened':
                $(data.target).css({
                    'height': height.opened + height.footer + 'px'
                });
                $(data.container)
                    .removeClass('collapseAwesome--closed')
                    .addClass('collapseAwesome--opened');
                $(data.label).html(options.labelReadShort);
                options.status = 'opened';
                //console.log('set opened');
                break;
            case 'closed':
                $(data.target).css({
                    'height': height.closed + 'px'
                });
                $(data.container)
                    .removeClass('collapseAwesome--opened')
                    .addClass('collapseAwesome--closed');
                $(data.label).html(options.labelReadMore);
                options.status = 'closed';
                //console.log('set closed');
                break;
            default:
                break;
        }
    },




};
