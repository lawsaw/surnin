$.fn.wheel = function (callback) {
    return this.each(function () {
        $(this).on('mousewheel DOMMouseScroll', function (e) {
            e.delta = null;
            if (e.originalEvent) {
                if (e.originalEvent.wheelDelta) e.delta = e.originalEvent.wheelDelta / -40;
                if (e.originalEvent.deltaY) e.delta = e.originalEvent.deltaY;
                if (e.originalEvent.detail) e.delta = e.originalEvent.detail;
            }

            if (typeof callback == 'function') {
                callback.call(this, e);
            }
        });
    });
};


var scrollAwesome = {


    'default': {
        'container' : $('body'),
        'step' : 6,
        'speed' : 1500,
        'ease' : 'easeOutSine',
        'timeToCollect' : 150,
        'direction' : null,

        'key' : false,
        'positionCurrent' : 0,
        'positionStart' : 0,
        'positionFinish' : 0,
        'distance' : 0,

        'keyAccelerate' : false,
        'positionCurrentAccelerate' : 0,
        'positionStartAccelerate' : 0,
        'positionFinishAccelerate' : 0,
        'distanceAccelerate' : 0,


        'distancePrev' : 0,
        'timer' : '',
        'event': null,
        'delta': 0,
        'distanceData': {},
    },


    'init': function(options) {

        options = siteOptions.setOptions({
            defaults: this.default,
            source: isExist(options) ? options : {}
        });
        if(options.container == $('body')) {
            //siteOptions.disableScroll();
        }
        this.listener(options);

    },


    'listener': function(options) {

        var parentObj = this;
        $(options.container).wheel(function(e){
            e.stopPropagation();
            e.preventDefault();
            options.delta = e.delta;
            //if(options.key == false) {
            //options.delta = options.delta < 0 ? 0 : options.delta;
            //if(options.key == false) {
                options.positionCurrent = options.positionCurrent + options.delta;
            //}

            //options.positionCurrent = options.positionCurrent <=0 ? 0 : options.positionCurrent;
            //options.positionCurrent = $(options.container).scrollTop() + options.delta;
            //}
            //options.positionCurrentAccelerate = options.positionCurrentAccelerate + options.delta;
            parentObj.smoothScroll3(options);
        });

    },



    'smoothScroll3': function(options) {

        var parentObj = this;




        if(options.key == false) {



            clearTimeout(options.timer);

            var pos = options.positionCurrent;

            options.timer = setTimeout(function() {

                options.key = true;

                options.positionStart = options.positionFinish;
                options.positionFinish = pos;
                options.distance = options.positionFinish - options.positionStart;
                options.distanceData = {
                    scrollLeft: {
                        scrollLeft: options.container.scrollLeft() + options.distance
                    },
                    scrollTop: {
                        scrollTop: options.container.scrollTop() + options.distance
                    },
                };

                console.log({
                    'container': options.container,
                    'start': options.positionStart,
                    'finish': options.positionFinish,
                    'distance': options.distance,
                });

                //setTimeout(function() {


                //});

                $(options.container).animate(
                    options.direction == 'x' ? options.distanceData.scrollLeft : options.distanceData.scrollTop,
                    {
                        duration: options.speed,
                        specialEasing: {
                            scrollTop: options.ease
                        },
                        complete: function() {
                            console.log('animate complete');
                            //options.key = false;
                        }
                    }
                );

                options.key = false;


            }, options.timeToCollect);

        } else {

        }






    },


















    'smoothScroll2': function(options) {

        options.distancePrev = options.distance;


        //options.distanceAccelerate = options.positionCurrentAccelerate - options.positionFinish;




        if(options.key == false) {

            clearTimeout(options.timer);

            options.timer = setTimeout(function() {



                options.key = true;

                if(options.key == true) {

                    options.positionStart = options.positionFinish;
                    options.positionFinish = options.positionCurrent;
                    options.distance = options.positionFinish - options.positionStart;

                    // options.positionStartAccelerate = options.positionFinishAccelerate;
                    // options.positionFinishAccelerate = options.positionCurrentAccelerate;
                    // options.distanceAccelerate = options.positionCurrentAccelerate - options.positionStartAccelerate;

                    console.log({
                        'container': options.container,
                        'start': options.positionStart,
                        'finish': options.positionFinish,
                        'distance': options.distance,
                        //'distancePrev': options.distancePrev,
                    });

                    console.log({
                        'container2': options.container,
                        'start2': options.positionStartAccelerate,
                        'finish2': options.positionFinishAccelerate,
                        'distance2': options.distanceAccelerate,
                        //'distancePrev': options.distancePrev,
                    });

                    options.distanceData = {
                        scrollLeft: {
                            scrollLeft: options.container.scrollLeft() + options.distance
                        },
                        scrollTop: {
                            scrollTop: options.container.scrollTop() + options.distance
                        },
                    };



                    $(options.container).animate(
                        options.direction == 'x' ? options.distanceData.scrollLeft : options.distanceData.scrollTop,
                        {
                            duration: options.speed,
                            specialEasing: {
                                scrollTop: options.ease
                            },
                            complete: function() {
                                console.log('animate complete');
                                options.key = false;
                            }
                        }
                    );

                }



            }, options.timeToCollect);


        } else {



        }






    },






    'smoothScroll': function(options) {

        clearTimeout(options.timer);
        options.key = options.key == false ? true : false;
        options.distancePrev = options.distance;

        if((options.distancePrev < 0 && options.distance > 0) || (options.distancePrev > 0 && options.distance < 0)) {
            $(options.container).stop();
        }


        options.timer = setTimeout(function() {
            options.positionStart = options.positionFinish;
            options.positionFinish = options.positionCurrent;
            options.distance = options.positionFinish - options.positionStart;
            console.log({
                'container': options.container,
                'start': options.positionStart,
                'finish': options.positionFinish,
                'distance': options.distance,
                'distancePrev': options.distancePrev,
            });
            var anim = {
                scrollLeft: {
                    scrollLeft: options.container.scrollLeft() + options.distance
                },
                scrollTop: {
                    scrollTop: options.container.scrollTop() + options.distance
                },
            };
            $(options.container).animate(
                options.direction == 'x' ? anim.scrollLeft : anim.scrollTop,
                {
                    duration: options.key == true ? options.speed/2 : options.speed,
                    specialEasing: {
                        scrollTop: options.ease
                    },
                    complete: function() {
                        options.key = options.key == true ? true : false;
                    }
                }
            );
        },options.timeToCollect, function(){
            options.key = options.key == true ? true : false;
        });

    },


};